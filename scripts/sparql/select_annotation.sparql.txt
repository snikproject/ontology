select
 ?resource
 count(distinct(?connected)) as ?degree
 ?consolidated
# ?type
 replace(str(?st),"http://www.snik.eu/ontology/meta/","") as ?st
 replace(str(?ontology),"http://www.snik.eu/ontology/","") as ?prefix
 group_concat(distinct ?Label;separator="|") as ?Labels 
 group_concat(distinct ?ld;separator="|") as ?ld 
 group_concat(distinct ?le;separator="|") as ?le 
 group_concat(distinct ?la;separator="|") as ?la
 group_concat(distinct ?comment;separator="|") as ?Comments
#group_concat(distinct ?Chapter;separator="|") as ?Chapters 
#group_concat(distinct ?definition;separator="|") as ?definitions 
#group_concat(distinct ?bb_page;separator="|") as ?bb_pages
#group_concat(distinct ?ob_page;separator="|") as ?ob_pages
from <http://www.snik.eu/ontology/meta>
from <http://www.snik.eu/ontology/bb>
from <http://www.snik.eu/ontology/ob>
from <http://www.snik.eu/ontology/he>
from <http://www.snik.eu/ontology/ciox>
from <http://www.snik.eu/ontology/it4it>
from <http://www.snik.eu/ontology/virtual>
{
#?resource a ?type.
?resource a owl:Class.
filter not exists {?resource a owl:Restriction.}
filter not exists {?resource a owl:Axiom.}

{?resource ?p ?connected.} UNION {?connected ?p ?resource.} 
?connected a owl:Class.

OPTIONAL {?resource meta:subTopClass ?st}
OPTIONAL {?resource meta:consolidated ?consolidated.}
OPTIONAL 
{ 
 ?resource rdfs:label ?Label. 
 filter(str(?Label)!=""). 
} 
OPTIONAL 
{ 
 ?resource rdfs:label ?ld. 
 filter(str(?ld)!="" && lang(?ld)="de"). 
} 
OPTIONAL 
{ 
 ?resource rdfs:label ?le. 
 filter(str(?le)!="" && lang(?le)="en"). 
} 

OPTIONAL 
{ 
 ?resource skos:la ?la. 
 filter(str(?la)!=""). 
} 
OPTIONAL 
{ 
 ?resource rdfs:comment ?comment. 
 filter(str(?comment)!=""). 
} 
#OPTIONAL 
#{ 
# ?resource meta:Chapter ?Chapter. 
# filter(str(?Chapter)!=""). 
#} 
OPTIONAL 
{ 
 ?resource meta:Concept_Domain ?Concept_Domain. 
 filter(str(?Concept_Domain)!=""). 
} 
OPTIONAL 
{ 
 ?resource meta:Concept_Type ?Concept_Type. 
 filter(str(?Concept_Type)!=""). 
} 
#OPTIONAL 
#{ 
# ?resource skos:definition ?definition. 
# filter(str(?definition)!=""). 
#} 
OPTIONAL 
{ 
 ?resource bb:page ?bb_page.
 filter(str(?bb_page)!=""). 
} 
#OPTIONAL 
#{ 
# ?resource ob:page ?ob_page.
# filter(str(?ob_page)!=""). 
#} 
OPTIONAL 
{ 
 ?ontology a owl:Ontology.
 ?ontology ov:defines ?resource. 
} 
} order by desc(count(distinct(?connected)))
